{"remainingRequest":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/Form2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/Form2.vue","mtime":1607525788604},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { InputForm, Textbox } from '@phila/phila-ui';\nimport { ValidationObserver, withValidation, extend, setInteractionMode } from 'vee-validate';\n\nimport { required } from 'vee-validate/dist/rules';\nextend('required', {\n  ...required,\n  message: 'This field is required',\n});\n\nsetInteractionMode('passive');\n\n\nconst VeeTextbox = withValidation(Textbox);\n\nexport default {\n  components: {\n    InputForm,\n    ValidationObserver,\n    VeeTextbox,\n  },\n  data () {\n    return {\n      value1: \"\",\n      value2: \"\",\n    };\n  },\n  methods: {\n    validateOnSubmit () {\n      alert('Form has been submitted!');\n    },\n  },\n};\n",{"version":3,"sources":["Form2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Form2.vue","sourceRoot":"src/components/examples","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"columns\">\n      <div class=\"column is-half\">\n        <ValidationObserver\n          v-slot=\"{ errors, handleSubmit }\"\n          tag=\"div\"\n        >\n          <input-form\n            title=\"Form title\"\n            desc=\"Form description\"\n            :errors=\"errors\"\n          >\n            <p class=\"is-field-info-important\">\n              This form shows error counts only on submit.\n            </p>\n            <vee-textbox\n              v-model=\"value1\"\n              rules=\"required\"\n              placeholder=\"First Name\"\n              required\n              name=\"Firs Name\"\n            />\n            <vee-textbox\n              v-model=\"value2\"\n              rules=\"required\"\n              placeholder=\"Last Name\"\n              required\n              name=\"Last Name\"\n            />\n            <button\n              slot=\"submit\"\n              class=\"is-cta button\"\n              @click.prevent=\"handleSubmit(validateOnSubmit)\"\n            >\n              Submit\n            </button>\n          </input-form>\n        </ValidationObserver>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { InputForm, Textbox } from '@phila/phila-ui';\nimport { ValidationObserver, withValidation, extend, setInteractionMode } from 'vee-validate';\n\nimport { required } from 'vee-validate/dist/rules';\nextend('required', {\n  ...required,\n  message: 'This field is required',\n});\n\nsetInteractionMode('passive');\n\n\nconst VeeTextbox = withValidation(Textbox);\n\nexport default {\n  components: {\n    InputForm,\n    ValidationObserver,\n    VeeTextbox,\n  },\n  data () {\n    return {\n      value1: \"\",\n      value2: \"\",\n    };\n  },\n  methods: {\n    validateOnSubmit () {\n      alert('Form has been submitted!');\n    },\n  },\n};\n</script>"]}]}