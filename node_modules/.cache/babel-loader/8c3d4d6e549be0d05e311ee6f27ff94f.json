{"remainingRequest":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/babel-loader/lib/index.js!/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/Form2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/Form2.vue","mtime":1607525788604},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { InputForm, Textbox } from '@phila/phila-ui';\nimport { ValidationObserver, withValidation, extend, setInteractionMode } from 'vee-validate';\nimport { required } from 'vee-validate/dist/rules';\nextend('required', _objectSpread({}, required, {\n  message: 'This field is required'\n}));\nsetInteractionMode('passive');\nvar VeeTextbox = withValidation(Textbox);\nexport default {\n  components: {\n    InputForm: InputForm,\n    ValidationObserver: ValidationObserver,\n    VeeTextbox: VeeTextbox\n  },\n  data: function data() {\n    return {\n      value1: \"\",\n      value2: \"\"\n    };\n  },\n  methods: {\n    validateOnSubmit: function validateOnSubmit() {\n      alert('Form has been submitted!');\n    }\n  }\n};",{"version":3,"sources":["Form2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,SAAA,SAAA,EAAA,OAAA,QAAA,iBAAA;AACA,SAAA,kBAAA,EAAA,cAAA,EAAA,MAAA,EAAA,kBAAA,QAAA,cAAA;AAEA,SAAA,QAAA,QAAA,yBAAA;AACA,MAAA,CAAA,UAAA,oBACA,QADA;AAEA,EAAA,OAAA,EAAA;AAFA,GAAA;AAKA,kBAAA,CAAA,SAAA,CAAA;AAGA,IAAA,UAAA,GAAA,cAAA,CAAA,OAAA,CAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,kBAAA,EAAA,kBAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,MAAA,KAAA,CAAA,0BAAA,CAAA;AACA;AAHA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"columns\">\n      <div class=\"column is-half\">\n        <ValidationObserver\n          v-slot=\"{ errors, handleSubmit }\"\n          tag=\"div\"\n        >\n          <input-form\n            title=\"Form title\"\n            desc=\"Form description\"\n            :errors=\"errors\"\n          >\n            <p class=\"is-field-info-important\">\n              This form shows error counts only on submit.\n            </p>\n            <vee-textbox\n              v-model=\"value1\"\n              rules=\"required\"\n              placeholder=\"First Name\"\n              required\n              name=\"Firs Name\"\n            />\n            <vee-textbox\n              v-model=\"value2\"\n              rules=\"required\"\n              placeholder=\"Last Name\"\n              required\n              name=\"Last Name\"\n            />\n            <button\n              slot=\"submit\"\n              class=\"is-cta button\"\n              @click.prevent=\"handleSubmit(validateOnSubmit)\"\n            >\n              Submit\n            </button>\n          </input-form>\n        </ValidationObserver>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { InputForm, Textbox } from '@phila/phila-ui';\nimport { ValidationObserver, withValidation, extend, setInteractionMode } from 'vee-validate';\n\nimport { required } from 'vee-validate/dist/rules';\nextend('required', {\n  ...required,\n  message: 'This field is required',\n});\n\nsetInteractionMode('passive');\n\n\nconst VeeTextbox = withValidation(Textbox);\n\nexport default {\n  components: {\n    InputForm,\n    ValidationObserver,\n    VeeTextbox,\n  },\n  data () {\n    return {\n      value1: \"\",\n      value2: \"\",\n    };\n  },\n  methods: {\n    validateOnSubmit () {\n      alert('Form has been submitted!');\n    },\n  },\n};\n</script>"],"sourceRoot":"src/components/examples"}]}