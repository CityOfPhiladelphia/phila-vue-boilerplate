{"remainingRequest":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/babel-loader/lib/index.js!/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/ComponentRender.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ibdf/dev/phila-vue-boilerplate/src/components/examples/ComponentRender.vue","mtime":1607451811261},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibdf/dev/phila-vue-boilerplate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nexport default {\n  data: function data() {\n    return {\n      slotProps: {}\n    };\n  },\n  mounted: function mounted() {\n    if (this.$slots.default) {\n      //slot component\n      var slotComponent = this.$slots.default[0]['componentOptions']; //get slot component name\n\n      var slotComponentName = slotComponent.tag; //get slot component passed props\n\n      this.slotProps = slotComponent.propData; //get all other slot component info\n\n      this.slotComponent = Vue.component(slotComponentName); //merge default props with passed props\n      //create new component with the same info\n      // var newComponent = new ComponentClass({\n      //   propsData: { desc: 'extra info' },\n      // });\n      // newComponent.$mount();\n      // this.$refs['render'].appendChild(newComponent.$el);\n    }\n  }\n};",{"version":3,"sources":["ComponentRender.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,GAAA,MAAA,KAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OANA,qBAMA;AAEA,QAAA,KAAA,MAAA,CAAA,OAAA,EAAA;AAEA;AACA,UAAA,aAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,CAHA,CAKA;;AACA,UAAA,iBAAA,GAAA,aAAA,CAAA,GAAA,CANA,CAQA;;AACA,WAAA,SAAA,GAAA,aAAA,CAAA,QAAA,CATA,CAWA;;AACA,WAAA,aAAA,GAAA,GAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,CAZA,CAcA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AApCA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- <div\n      v-for=\"(prop, key) in componentProps\"\n      :key=\"key\"\n    >\n      <template v-if=\"prop.type.toString().includes('String')\">\n        {{ key }}: <input\n          type=\"text\"\n          :value=\"slotProps && slotProps[key] || prop.default\"\n        >\n      </template>\n    </div> -->\n    <!-- <input @input=\"desc = 'changed'\"> -->\n    <slot desc=\"test\" />\n  </div>\n</template>\n<script>\nimport Vue from 'vue';\nexport default {\n  data () {\n    return {\n      slotProps: {},\n    };\n  },\n  mounted () {\n\n    if (this.$slots.default) {\n\n      //slot component\n      let slotComponent = this.$slots.default[0]['componentOptions'];\n\n      //get slot component name\n      let slotComponentName = slotComponent.tag;\n\n      //get slot component passed props\n      this.slotProps = slotComponent.propData;\n\n      //get all other slot component info\n      this.slotComponent = Vue.component(slotComponentName);\n\n      //merge default props with passed props\n\n      //create new component with the same info\n\n      // var newComponent = new ComponentClass({\n      //   propsData: { desc: 'extra info' },\n      // });\n\n      // newComponent.$mount();\n      // this.$refs['render'].appendChild(newComponent.$el);\n\n    }\n\n\n  },\n};\n</script>"],"sourceRoot":"src/components/examples"}]}